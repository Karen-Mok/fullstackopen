{"ast":null,"code":"var _jsxFileName = \"/home/karenmok/fullstackopen/part1/src/exercise1.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = ({\n  handleClick,\n  text\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: handleClick,\n  children: text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 5\n}, this);\n_c = Button;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [allClicks, setAll] = useState([]);\n  const goodClick = () => {\n    setAll(allClicks.concat('g'));\n    setGood(good + 1);\n  };\n  const neutralClick = () => {\n    setAll(allClicks.concat('n'));\n    setNeutral(neutral + 1);\n  };\n  const badClick = () => {\n    setAll(allClicks.concat('b'));\n    setBad(bad + 1);\n  };\n  const avg = () => {\n    return (good - bad) / allClicks.length;\n  };\n\n  /*//错误写法\n  const funcClick = () => {\n    switch({text}) {\n        case 'good':\n            setGood(good + 1);\n            break;\n        case 'neutral':\n            setNeutral(neutral+1)\n            break;\n        case 'bad':\n            setBad(bad + 1);\n            break;\n        default:\n            alert('what?');\n    }\n  }*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: goodClick,\n      text: 'good'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: neutralClick,\n      text: 'neutral'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: badClick,\n      text: 'bad'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" good \", good, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" neutral \", neutral, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" bad \", bad, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" all  \", allClicks.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" average `avg()` \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"DpiSS1BVbqUGQzOLdO5k5XPgpCw=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Button","handleClick","text","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","good","setGood","neutral","setNeutral","bad","setBad","allClicks","setAll","goodClick","concat","neutralClick","badClick","avg","length","_c2","$RefreshReg$"],"sources":["/home/karenmok/fullstackopen/part1/src/exercise1.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Button = ({ handleClick, text }) => (\n    <button onClick={handleClick}>\n      {text}\n    </button>\n)\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const [allClicks,setAll] = useState([])\n\n  const goodClick = () => {\n    setAll(allClicks.concat('g'))\n    setGood(good + 1)\n  }\n\n  const neutralClick = () => {\n    setAll(allClicks.concat('n'))\n    setNeutral(neutral + 1)\n  }\n\n  const badClick = () => {\n    setAll(allClicks.concat('b'))\n    setBad(bad + 1)\n  }\n\n  const avg = () => {\n    return (good-bad)/allClicks.length\n  }\n\n  /*//错误写法\n  const funcClick = () => {\n    switch({text}) {\n        case 'good':\n            setGood(good + 1);\n            break;\n        case 'neutral':\n            setNeutral(neutral+1)\n            break;\n        case 'bad':\n            setBad(bad + 1);\n            break;\n        default:\n            alert('what?');\n    }\n  }*/\n\n  return (\n    <div>\n    <h1>give feedback</h1>\n    <Button handleClick={goodClick} text={'good'} />\n    <Button handleClick={neutralClick} text={'neutral'} />\n    <Button handleClick={badClick} text={'bad'} />\n    <h1>statistics</h1>\n    <p> good {good} </p>\n    <p> neutral {neutral} </p>\n    <p> bad {bad} </p>\n    <p> all  {allClicks.length}</p>\n    <p> average `avg()` </p>\n    </div>\n  )\n}\n\nexport default App"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,MAAM,GAAGA,CAAC;EAAEC,WAAW;EAAEC;AAAK,CAAC,kBACjCH,OAAA;EAAQI,OAAO,EAAEF,WAAY;EAAAG,QAAA,EAC1BF;AAAI;EAAAG,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACC,CACX;AAAAC,EAAA,GAJKT,MAAM;AAMZ,MAAMU,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACmB,GAAG,EAAEC,MAAM,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EAEjC,MAAM,CAACqB,SAAS,EAACC,MAAM,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAEvC,MAAMuB,SAAS,GAAGA,CAAA,KAAM;IACtBD,MAAM,CAACD,SAAS,CAACG,MAAM,CAAC,GAAG,CAAC,CAAC;IAC7BR,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC;EACnB,CAAC;EAED,MAAMU,YAAY,GAAGA,CAAA,KAAM;IACzBH,MAAM,CAACD,SAAS,CAACG,MAAM,CAAC,GAAG,CAAC,CAAC;IAC7BN,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC;EACzB,CAAC;EAED,MAAMS,QAAQ,GAAGA,CAAA,KAAM;IACrBJ,MAAM,CAACD,SAAS,CAACG,MAAM,CAAC,GAAG,CAAC,CAAC;IAC7BJ,MAAM,CAACD,GAAG,GAAG,CAAC,CAAC;EACjB,CAAC;EAED,MAAMQ,GAAG,GAAGA,CAAA,KAAM;IAChB,OAAO,CAACZ,IAAI,GAACI,GAAG,IAAEE,SAAS,CAACO,MAAM;EACpC,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE,oBACE1B,OAAA;IAAAK,QAAA,gBACAL,OAAA;MAAAK,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBT,OAAA,CAACC,MAAM;MAACC,WAAW,EAAEmB,SAAU;MAAClB,IAAI,EAAE;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChDT,OAAA,CAACC,MAAM;MAACC,WAAW,EAAEqB,YAAa;MAACpB,IAAI,EAAE;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtDT,OAAA,CAACC,MAAM;MAACC,WAAW,EAAEsB,QAAS;MAACrB,IAAI,EAAE;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9CT,OAAA;MAAAK,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBT,OAAA;MAAAK,QAAA,GAAG,QAAM,EAACQ,IAAI,EAAC,GAAC;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACpBT,OAAA;MAAAK,QAAA,GAAG,WAAS,EAACU,OAAO,EAAC,GAAC;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC1BT,OAAA;MAAAK,QAAA,GAAG,OAAK,EAACY,GAAG,EAAC,GAAC;IAAA;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAClBT,OAAA;MAAAK,QAAA,GAAG,QAAM,EAACc,SAAS,CAACO,MAAM;IAAA;MAAApB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BT,OAAA;MAAAK,QAAA,EAAG;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV,CAAC;AAAAG,EAAA,CA1DKD,GAAG;AAAAgB,GAAA,GAAHhB,GAAG;AA4DT,eAAeA,GAAG;AAAA,IAAAD,EAAA,EAAAiB,GAAA;AAAAC,YAAA,CAAAlB,EAAA;AAAAkB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}